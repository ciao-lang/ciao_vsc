{
  "rule": {
    "prefix": "rule",
    "body": "${1:functor}(${2:Args}) :- \n\t${3:% Code}.",
    "description": "Rule",
    "scope": "source.ciao"
  },
  "fact": {
    "prefix": "fact",
    "body": "${1:functor}(${2:Args}).",
    "description": "Fact",
    "scope": "source.ciao"
  },
  "directive": {
    "prefix": "directive",
    "body": ":- ${1:directive}(${2:Args}).",
    "description": "Directive",
    "scope": "source.ciao"
  },
  "module": {
    "prefix": "module",
    "body": ":- module(${1:Module}, [${2:Exports}], [${3:Imports}]).",
    "description": "Module",
    "scope": "source.ciao"
  },
  "use_module/2": {
    "prefix": "use_module:use_module/2",
    "body": ":- use_module(${1:Module}, [${2:Imports}]).",
    "description": "Use_module/2",
    "scope": "source.ciao"
  },
  "use_module/1": {
    "prefix": "use_module:use_module/1",
    "body": ":- use_module(${1:Module}).",
    "description": "Use_module/1",
    "scope": "source.ciao"
  },
  "region": {
    "prefix": "region",
    "body": "%#region ${1:Description}\n\n${2:% Code}\n\n%#endregion",
    "description": "Folding by region markers",
    "scope": "source.ciao"
  },
  "test": {
    "prefix": "test",
    "body": ":- test ${1:functor}(${2:Args})\n\t: (${3:Precondition})\n\t=> (${4:Postcondition})\n\t+ (${5:GlobalProperties})\n\t# \"${6:Comment}\".",
    "description": "Unit test assertion",
    "scope": "source.ciao"
  },
  "pred": {
    "prefix": "pred",
    "body": ":- pred ${1:functor}(${2:Args}) : ${3:Precondition} => ${4:Postcondition}\n\t# \"${5:Comment}\".",
    "description": "Predicate assertion",
    "scope": "source.ciao"
  },
  "if_else": {
    "prefix": "if_else",
    "body": "( ${1:Condition} ->\n\t${2:% Code}\n;\n\t${3: % Code}\n).",
    "description": "If then Else expresion",
    "scope": "source.ciao"
  },
  "ciao-shell": {
    "prefix": "ciao-shell",
    "body": "#!/usr/bin/env ciao-shell",
    "description": "The ciao-shell declarator",
    "scope": "source.ciao"
  }
}
